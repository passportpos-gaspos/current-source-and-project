apply plugin: 'com.android.library'

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
}

android {
    /*signingConfigs {
        config {
            storeFile file('C:\\Users\\Kareem\\passportposv113.jks')
            storePassword 'store9945'
            keyPassword 'store9945'
            keyAlias 'passportv113'
        }
    }*/
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 28
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

            /*android.variantFilter { variant ->
                if (variant.buildType.name.endsWith('debug')) {
                    variant.setIgnore(true)
                }
            }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        POS {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api files('libs/StarIOPort3.1.jar')

}